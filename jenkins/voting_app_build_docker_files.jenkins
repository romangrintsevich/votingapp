#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent { 
        label 'built-in'
        }
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("Preparations") {
			    steps {
				    deleteDir() /* clean up our workspace */
			    }
        }

        stage("pull repository") {
          steps {
            echo " ============== pull repository =================="
            sh """
              git clone https://github.com/romangrintsevich/votingapp.git
             """
          }
        } 
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_grintsevich', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login -u $USERNAME -p $PASSWORD
                    """
                }
            }
        }
        stage("create docker image for proxy") {
            steps {
                echo " ============== start building image for proxy =================="
                dir ('votingapp/proxy') {
                	sh 'docker build -t rgrintsevich/proxy:latest . '
                }
            }
        }
        stage("docker push proxy image") {
            steps {
                echo " ============== start pushing image  for proxy =================="
                sh '''
                docker push rgrintsevich/proxy:latest
                '''
            }
        }
        stage("create docker image for result") {
            steps {
                echo " ============== start building image for result =================="
                dir ('votingapp/result') {
                	sh 'docker build -t rgrintsevich/result:latest . '
                }
            }
        }
        stage("docker push result image") {
            steps {
                echo " ============== start pushing image  for proxy =================="
                sh '''
                docker push rgrintsevich/result:latest
                '''
            }
        }
        stage("create docker image for vote") {
            steps {
                echo " ============== start building image for vote =================="
                dir ('votingapp/vote') {
                	sh 'docker build -t rgrintsevich/vote:latest . '
                }
            }
        }
        stage("docker push vote image") {
            steps {
                echo " ============== start pushing image for vote =================="
                sh '''
                docker push rgrintsevich/vote:latest
                '''
            }
        }
        stage("create docker image for worker") {
            steps {
                echo " ============== start building image for worker =================="
                dir ('votingapp/worker') {
                	sh 'docker build -t rgrintsevich/worker:latest . '
                }
            }
        }
        stage("docker push worker image") {
            steps {
                echo " ============== start pushing image for worker =================="
                sh '''
                docker push rgrintsevich/worker:latest
                '''
            }
        }
    }
}
